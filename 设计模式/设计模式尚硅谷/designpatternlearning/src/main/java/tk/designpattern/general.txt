设计模式分为三种类型，共23种:
1) 创建型模式: 单例模式, 抽象工厂模式, 原型模式, 建造者模式, 工厂模式.
2) 结构型模式: 适配器模式, 桥接模式, 装饰模式, 组合模式, 外观模式, 享元模式, 代理模式.
3) 行为型模式: 模板方法模式, 命令模式, 访问者模式, 迭代器模式, 观察者模式, 中介模式, 备忘录模式, 解释器模式, 状态模式
              策略模式, 职责链模式.

一. 单例模式
1) 单例模式保证了系统内存中该类只存在一个对象，节省了系统资源，对于一些需要频繁创建销毁的对象, 使用单例模式可以提高系统性能.
2) 当想实例化一个单例类的时候, 必须要记住使用相应的获取对象的方法, 而不是使用new
3) 单例模式使用的场景: 需要频繁进行创建和销毁的对象, 创建对象时耗时过多或耗费资源过多(即: 重量级对象), 但又经常用到的对象,
   比如工具类对象,频繁访问数据库或文件的对象(比如数据源,session工厂等)
4) 对于一定会用到的单例类对象，可以使用饿汉式创建(Singleton1), 对于不一定会用到的单例类对象，可以采用懒汉式创建(Singleton4,5,6).