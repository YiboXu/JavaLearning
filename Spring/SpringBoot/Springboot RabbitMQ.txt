1. 添加依赖
		<!-- Rabbit MQ -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>

2. 配置application.yml

#RabbitMQ
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /

3.在需要使用的地方注入RabbitTemplate 
package tk.springboot;

import org.junit.jupiter.api.Test;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import tk.springboot.model.Country;
import tk.springboot.mybatis.mapper.CountryMapper;

@SpringBootTest
public class TestRabbitMQ {
    @Autowired
    private RabbitTemplate rabbitTemplate;
    @Autowired
    private CountryMapper countryMapper;

    @Test
    public void test01(){
        Country country = countryMapper.selectCountryById((long)2);
        rabbitTemplate.convertAndSend("tacocloud.orders","tacocloud.order.queue",country);
    }

    @Test
    public void test02(){
        Object obj = rabbitTemplate.receiveAndConvert("tacocloud.order.queue");
        System.out.println(obj.getClass());
        System.out.println((Country)obj);
    }
}

3. 添加Json转换器
package tk.springboot.config;

import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class MyRabitmqConfig {
    @Bean
    public Jackson2JsonMessageConverter jackson2JsonMessageConverter(){
        return new Jackson2JsonMessageConverter();
    }
}

4. 添加监听
- 添加注释@EnableRabbit开启Rabbit的注解
@SpringBootApplication
@MapperScan("tk.springboot.mybatis.mapper")
//开启缓存注解支持
@EnableCaching
//开启Rabbit注解支持
@EnableRabbit
public class SpringbootlearningApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringbootlearningApplication.class, args);
	}

}

- 在监听RabbitMQ的方法上添加注解来标明需要监听哪些queue,这样一旦有消息进来，方法就会被促发
    @RabbitListener(queues = "tacocloud.order.queue")
    public void receiveCountry(Country country){
        System.out.println("收到MQ消息:"+country);
    }

5. 系统管理功能组件
AmqpAdmin ： RabbitMQ系统管理功能组件;
 *  	AmqpAdmin：创建和删除 Queue，Exchange，Binding

注入AmqpAdmin
	@Autowired
	AmqpAdmin amqpAdmin;

	@Test
	public void createExchange(){

//		amqpAdmin.declareExchange(new DirectExchange("amqpadmin.exchange"));
//		System.out.println("创建完成");

//		amqpAdmin.declareQueue(new Queue("amqpadmin.queue",true));
		//创建绑定规则

//		amqpAdmin.declareBinding(new Binding("amqpadmin.queue", Binding.DestinationType.QUEUE,"amqpadmin.exchange","amqp.haha",null));

		//amqpAdmin.de
	}