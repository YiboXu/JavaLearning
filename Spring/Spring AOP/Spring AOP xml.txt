Sample:
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/aop 
      http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="movie" class="concert.Movie">
    <constructor-arg value="#{T(System).out}" />
  </bean>

  <bean id="audience" class="concert.Audience">
    <constructor-arg value="#{T(System).out}" />
  </bean>

  <aop:config>
    <aop:aspect ref="audience">
      <aop:pointcut id="thanks"
          expression="execution(* *.perform(..))"/>
        
      <aop:before pointcut-ref="thanks" 
          method="handClap"/>

      <aop:after pointcut-ref="thanks" 
          method="handClap"/>
    </aop:aspect>
  </aop:config>
  
</beans>

1. 控制范围

- 指定包名
      <aop:pointcut id="embark"
          expression="execution(* *.perform(..)) and within(concert.*)"/>

这里within(concert.*)用来表示只有包concert里面的类的perform()方法，才会触发切面操作.

and 用来添加额外的条件，还可以用or

- 指定Bean id
execution(* concert.Performance.perform()) and bean('woodstock')

Here you’re saying that you want to apply aspect advice to the execution of
Performance’s perform() method, but limited to the bean whose ID is woodstock.

Narrowing a pointcut to a specific bean may be valuable in some cases, but you can
also use negation to apply an aspect to all beans that don’t have a specific ID:

execution(* concert.Performance.perform()) and !bean('woodstock')